#!/bin/sh
# Will be executed as user "root".
pluginname=raumserver
touch $LBPLOG/$pluginname/$pluginname.log > /dev/null 2>&1
echo "[loxberry-plugin-$pluginname] Start daemon script" >> $LBPLOG/$pluginname/$pluginname.log

if [ -x /usr/bin/logger ]; then
  /usr/bin/logger "[loxberry-plugin-$pluginname] Start daemon script"
fi

# wait for DNS readiness
until $(curl --output /dev/null --silent --head --fail http://nodejs.org); do
    printf '.'
    sleep 5
done

# Test if nodejs is installed otherwise install it:
echo "[loxberry-plugin-$pluginname] Test if nodejs is installed otherwise install it" >> $LBPLOG/$pluginname/$pluginname.log
if [ `which nodejs > /dev/null; echo $?` -ne 0 ] || [ `which npm > /dev/null; echo $?` -ne 0 ]
then
    if [ `grep Hardware /proc/cpuinfo | grep -E -c 'BCM[0-9]+'` -eq 1 ]
    then
        # based on https://github.com/audstanley/NodeJs-Raspberry-Pi/
        PICHIP=$(uname -m);
        LINKTONODE=$(curl -sG https://nodejs.org/dist/latest-v9.x/ | awk '{print $2}' | grep -P 'href=\"node-v9\.\d{1,}\.\d{1,}-linux-'$PICHIP'\.tar\.gz' | sed 's/href="//' | sed 's/<\/a>//' | sed 's/">.*//');
        NODEFOLDER=$(echo $LINKTONODE | sed 's/.tar.gz/\//');
        #Next, Creates directory for downloads, and downloads node 8.x
        cd /tmp && mkdir tempNode && cd tempNode && wget https://nodejs.org/dist/latest-v9.x/$LINKTONODE;
        tar -xzf $LINKTONODE;
        #Remove the tar after extracing it.
        rm $LINKTONODE;
        #remove older version of node:
        rm -R -f /opt/nodejs/;
        #remove symlinks
        rm /usr/bin/node /usr/sbin/node /sbin/node /sbin/node /usr/local/bin/node /usr/bin/npm /usr/sbin/npm /sbin/npm /usr/local/bin/npm 2> /dev/null;
        #This next line will copy Node over to the appropriate folder.
        mv /tmp/tempNode/$NODEFOLDER /opt/nodejs/;
        #This line will remove the nodeJs tar we downloaded.
        rm -R -f /tmp/tempNode/$LINKTONODE/;
        #Create symlinks to node && npm
        ln -s /opt/nodejs/bin/node /usr/bin/node; ln -s /opt/nodejs/bin/node /usr/sbin/node;
        ln -s /opt/nodejs/bin/node /sbin/node; ln -s /opt/nodejs/bin/node /usr/local/bin/node;
        ln -s /opt/nodejs/bin/npm /usr/bin/npm;
        ln -s /opt/nodejs/bin/npm /usr/sbin/npm; ln -s /opt/nodejs/bin/npm /sbin/npm;
        ln -s /opt/nodejs/bin/npm /usr/local/bin/npm;
    else
        if [ ! -f /etc/apt/sources.list.d/nodesource.list ]
        then
          echo "[loxberry-plugin-$pluginname] Nodesources repo not installed. Starting installation now." >> $LBPLOG/$pluginname/$pluginname.log
            # Nodejs current is recommended as of
            #  https://github.com/ChriD/node-raumserver#requirements
            curl -sL https://deb.nodesource.com/setup_8.x | bash
            apt-get -y install nodejs
            echo "[loxberry-plugin-$pluginname] Nodesources repo installation done" >> $LBPLOG/$pluginname/$pluginname.log
        fi
    fi
fi

echo "[loxberry-plugin-raumserver] check if raumserver can be started in $LBPDATA/$pluginname" >> $LBPLOG/$pluginname/$pluginname.log

if [ -d "$LBPDATA/$pluginname" ]
then
    # change to raumserver folder
    cd $LBPDATA/$pluginname

    #check if raumserver is already installed
    echo "[loxberry-plugin-$pluginname] check if raumserver is already installed" >> $LBPLOG/$pluginname/$pluginname.log
    if [ `npm list | grep -c "node-raumserver"` -ne 1 ]
    then
        echo "[loxberry-plugin-$pluginname] Raumserver installation: node module raumserver not installed. Starting installation now." >> $LBPLOG/$pluginname/$pluginname.log
        # otherwise install the server
        npm install github:ChriD/node-raumserver
        # copy config file
        cp -p -v -r $LBPCONFIG/$pluginname/* $LBPDATA/$pluginname/node_modules/node-raumserver/config/
        echo "[loxberry-plugin-$pluginname] Raumserver installation done." >> $LBPLOG/$pluginname/$pluginname.log
    fi

    echo "[loxberry-plugin-$pluginname] Raumserver: starting." >> $LBPLOG/$pluginname/$pluginname.log
    #run the server:
    cd $LBPDATA/$pluginname/node_modules/node-raumserver/
    node raumserver.js

    if [ `ps ax | grep -v grep | grep -c raumserver.js` -eq 1 ]
    then
        echo "[loxberry-plugin-$pluginname] Raumserver: Start successful." >> $LBPLOG/$pluginname/$pluginname.log
        /usr/bin/logger "[loxberry-plugin-$pluginname] Raumserver: Start successful."
    else
        echo "[loxberry-plugin-$pluginname] Raumserver: Start failed." >> $LBPLOG/$pluginname/$pluginname.log
        /usr/bin/logger "[loxberry-plugin-$pluginname] Raumserver: Start failed."
   fi
else
     echo "[loxberry-plugin-$pluginname] It seems that the folder $LBPDATA/raumserver does not exist or is not accessible" >> $LBPLOG/$pluginname/$pluginname.log

fi

exit 0
